[
  {
    "tags": [],
    "description": {
      "full": "Created by knut on 14-11-18.",
      "summary": "Created by knut on 14-11-18.",
      "body": ""
    },
    "isPrivate": false,
    "ignore": false,
    "code": "var sq = require('./parser/sequenceDiagram').parser;\n\n//console.log(sq.parse('a12:d12\\na24:d24'));\n\nstr = 'a12:d12\\n\\na24:d24';\n//console.log(str);\n//console.log(sq.parse(str));\n//console.log(sq.parse('[]\\n[]'));\n\nstr = 'bfs:queue\\n\\nbfs3:queue\\n';\nstr =  str + 'bfs:message=someNode.setLevel\\n';\nstr =  str + 'bfs:message2=someNode.setLevel2';\n//console.log(str);\n//console.log(sq.parse(str));\n\nstr = 'bfs:BFS\\n';\nstr = str + 'someNode:SomeNode\\n';\nstr = str + 'bfs:queue.new\\n';\nstr = str + 'bfs:someNode.setLevel';\n//console.log(str);\n//console.log(sq.parse(str));\n\n\ndescribe('when parsing a sequenceDiagram',function() {\n    var parseError;\n    beforeEach(function () {\n        sq.yy = require('./sequenceDb');\n        sq.yy.clear();\n        parseError = function(err, hash) {\n            console.log('Syntax error:' + err);\n            console.log(hash);\n        };\n        sq.yy.parseError = parseError;\n    });\n\n    it('it should handle a sequenceDiagram defintion', function () {\n        str = 'sequenceDiagram\\n' +\n        'Alice->Bob: Hello Bob, how are you?\\n' +\n        'Note right of Bob: Bob thinks\\n' +\n        'Bob-->Alice: I am good thanks!\\n';\n\n        sq.parse(str);\n        var actors = sq.yy.getActors();\n        expect(actors.Alice).ToBdescription = 'Alice';\n        actors.Bob.description = 'Bob';\n\n        //console.log('actors');\n        //console.log(actors);\n\n        var messages = sq.yy.getMessages();\n\n        expect(messages.length).toBe(2);\n        //console.log('messages');\n        //console.log(messages);\n        expect(messages[0].from).toBe('Alice');\n        expect(messages[1].from).toBe('Bob');\n    });\n\n});",
    "ctx": {
      "type": "declaration",
      "name": "sq",
      "value": "require('./parser/sequenceDiagram').parser",
      "string": "sq"
    }
  }
]